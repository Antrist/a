package au.edu.wehi.idsv.metrics;

import static org.junit.Assert.*;

import java.util.ArrayList;
import java.util.List;

import org.junit.Test;


public class SoftClipSizeDistributionTest {
	public List<SoftClipDetailMetrics> data_778() {
		List<SoftClipDetailMetrics> list = new ArrayList<SoftClipDetailMetrics>();
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 0; READCOUNT = 105662867; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 1; READCOUNT = 1267368; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 2; READCOUNT = 828481; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 3; READCOUNT = 428075; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 4; READCOUNT = 225398; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 5; READCOUNT = 148866; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 6; READCOUNT = 133058; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 7; READCOUNT = 115614; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 8; READCOUNT = 93541; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 9; READCOUNT = 82310; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 10; READCOUNT = 77553; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 11; READCOUNT = 64227; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 12; READCOUNT = 56625; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 13; READCOUNT = 52518; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 14; READCOUNT = 48524; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 15; READCOUNT = 43497; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 16; READCOUNT = 39685; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 17; READCOUNT = 37281; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 18; READCOUNT = 34535; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 19; READCOUNT = 34209; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 20; READCOUNT = 31666; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 21; READCOUNT = 25670; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 22; READCOUNT = 23803; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 23; READCOUNT = 22230; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 24; READCOUNT = 20731; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 25; READCOUNT = 19441; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 26; READCOUNT = 18415; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 27; READCOUNT = 17802; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 28; READCOUNT = 16686; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 29; READCOUNT = 16611; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 30; READCOUNT = 16525; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 31; READCOUNT = 13138; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 32; READCOUNT = 12664; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 33; READCOUNT = 11521; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 34; READCOUNT = 11163; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 35; READCOUNT = 10792; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 36; READCOUNT = 10576; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 37; READCOUNT = 10516; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 38; READCOUNT = 10124; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 39; READCOUNT = 10182; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 40; READCOUNT = 10699; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 41; READCOUNT = 7914; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 42; READCOUNT = 7901; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 43; READCOUNT = 7330; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 44; READCOUNT = 7199; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 45; READCOUNT = 7004; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 46; READCOUNT = 6770; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 47; READCOUNT = 7043; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 48; READCOUNT = 7008; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 49; READCOUNT = 7057; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 50; READCOUNT = 7417; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 51; READCOUNT = 5081; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 52; READCOUNT = 4821; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 53; READCOUNT = 4556; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 54; READCOUNT = 4608; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 55; READCOUNT = 4487; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 56; READCOUNT = 4491; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 57; READCOUNT = 4635; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 58; READCOUNT = 4733; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 59; READCOUNT = 4702; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 60; READCOUNT = 5328; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 61; READCOUNT = 3158; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 62; READCOUNT = 3102; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 63; READCOUNT = 3105; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 64; READCOUNT = 2906; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 65; READCOUNT = 2794; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 66; READCOUNT = 2904; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 67; READCOUNT = 2993; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 68; READCOUNT = 3043; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 69; READCOUNT = 3263; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 70; READCOUNT = 3534; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 71; READCOUNT = 1674; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 72; READCOUNT = 1532; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 73; READCOUNT = 1464; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 74; READCOUNT = 1211; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 75; READCOUNT = 1319; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 76; READCOUNT = 1265; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 77; READCOUNT = 1541; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 78; READCOUNT = 0; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 79; READCOUNT = 0; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 80; READCOUNT = 0; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 81; READCOUNT = 0; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 82; READCOUNT = 0; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 83; READCOUNT = 0; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 84; READCOUNT = 0; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 85; READCOUNT = 0; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 86; READCOUNT = 0; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 87; READCOUNT = 0; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 88; READCOUNT = 0; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 89; READCOUNT = 0; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 90; READCOUNT = 0; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 91; READCOUNT = 0; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 92; READCOUNT = 0; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 93; READCOUNT = 0; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 94; READCOUNT = 0; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 95; READCOUNT = 0; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 96; READCOUNT = 0; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 97; READCOUNT = 0; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 98; READCOUNT = 0; }});
		list.add(new SoftClipDetailMetrics() {{ LENGTH = 99; READCOUNT = 0; }});
		return list;
	}
	@Test
	public void should_calc_phred_score() {
		SoftClipSizeDistribution d = new SoftClipSizeDistribution(data_778());
		assertEquals(0, d.getPhred(0), 0.001);
		assertEquals(14.0649733007887, d.getPhred(1), 0.001);
		assertEquals(15.5759043682811, d.getPhred(2), 0.001);
		assertEquals(16.9546124331507, d.getPhred(3), 0.001);
		assertEquals(17.8861774354832, d.getPhred(4), 0.001);
		assertEquals(18.4709175523681, d.getPhred(5), 0.001);
		assertEquals(18.9053412273954, d.getPhred(6), 0.001);
		assertEquals(19.3342138972767, d.getPhred(7), 0.001);
		assertEquals(19.7446822482152, d.getPhred(8), 0.001);
		assertEquals(20.1077461288297, d.getPhred(9), 0.001);
		assertEquals(20.4544287878607, d.getPhred(10), 0.001);
		assertEquals(20.8085171832688, d.getPhred(11), 0.001);
		assertEquals(21.1253277576786, d.getPhred(12), 0.001);
		assertEquals(21.4251986713991, d.getPhred(13), 0.001);
		assertEquals(21.7231366450605, d.getPhred(14), 0.001);
		assertEquals(22.0178562200273, d.getPhred(15), 0.001);
		assertEquals(22.3001956251441, d.getPhred(16), 0.001);
		assertEquals(22.5748538189961, d.getPhred(17), 0.001);
		assertEquals(22.8497255725281, d.getPhred(18), 0.001);
		assertEquals(23.1208726404096, d.getPhred(19), 0.001);
		assertEquals(23.4072603787115, d.getPhred(20), 0.001);
		assertEquals(23.6903223658872, d.getPhred(21), 0.001);
		assertEquals(23.9341474594603, d.getPhred(22), 0.001);
		assertEquals(24.1731643283622, d.getPhred(23), 0.001);
		assertEquals(24.4089279673423, d.getPhred(24), 0.001);
		assertEquals(24.6409606194963, d.getPhred(25), 0.001);
		assertEquals(24.8704294281474, d.getPhred(26), 0.001);
		assertEquals(25.0995729281676, d.getPhred(27), 0.001);
		assertEquals(25.33320994188, d.getPhred(28), 0.001);
		assertEquals(25.5642351469091, d.getPhred(29), 0.001);
		assertEquals(25.8071157333773, d.getPhred(30), 0.001);
		assertEquals(26.0630163441606, d.getPhred(31), 0.001);
		assertEquals(26.2778054053944, d.getPhred(32), 0.001);
		assertEquals(26.4954121878496, d.getPhred(33), 0.001);
		assertEquals(26.7033202859339, d.getPhred(34), 0.001);
		assertEquals(26.9147308464297, d.getPhred(35), 0.001);
		assertEquals(27.1293902203165, d.getPhred(36), 0.001);
		assertEquals(27.3505768831843, d.getPhred(37), 0.001);
		assertEquals(27.5822778712585, d.getPhred(38), 0.001);
		assertEquals(27.817664714572, d.getPhred(39), 0.001);
		assertEquals(28.0680119936773, d.getPhred(40), 0.001);
		assertEquals(28.3476108599568, d.getPhred(41), 0.001);
		assertEquals(28.5666641789958, d.getPhred(42), 0.001);
		assertEquals(28.7969667567788, d.getPhred(43), 0.001);
		assertEquals(29.0221293364742, d.getPhred(44), 0.001);
		assertEquals(29.2552468608571, d.getPhred(45), 0.001);
		assertEquals(29.494730618539, d.getPhred(46), 0.001);
		assertEquals(29.7394835961963, d.getPhred(47), 0.001);
		assertEquals(30.0096494075913, d.getPhred(48), 0.001);
		assertEquals(30.2962631340505, d.getPhred(49), 0.001);
		assertEquals(30.6053608034657, d.getPhred(50), 0.001);
		assertEquals(30.9558352151959, d.getPhred(51), 0.001);
		assertEquals(31.2133675589591, d.getPhred(52), 0.001);
		assertEquals(31.4727032092736, d.getPhred(53), 0.001);
		assertEquals(31.7328895430087, d.getPhred(54), 0.001);
		assertEquals(32.0129256764225, d.getPhred(55), 0.001);
		assertEquals(32.3041409267973, d.getPhred(56), 0.001);
		assertEquals(32.6165846131424, d.getPhred(57), 0.001);
		assertEquals(32.9645002359569, d.getPhred(58), 0.001);
		assertEquals(33.3510977878893, d.getPhred(59), 0.001);
		assertEquals(33.7725829717661, d.getPhred(60), 0.001);
		assertEquals(34.3055292505632, d.getPhred(61), 0.001);
		assertEquals(34.6553325504273, d.getPhred(62), 0.001);
		assertEquals(35.0287532465374, d.getPhred(63), 0.001);
		assertEquals(35.4377425987591, d.getPhred(64), 0.001);
		assertEquals(35.8588992033717, d.getPhred(65), 0.001);
		assertEquals(36.3063907888808, d.getPhred(66), 0.001);
		assertEquals(36.8262115106648, d.getPhred(67), 0.001);
		assertEquals(37.4362524856, d.getPhred(68), 0.001);
		assertEquals(38.1591140819105, d.getPhred(69), 0.001);
		assertEquals(39.0967957123033, d.getPhred(70), 0.001);
		assertEquals(40.4103773703206, d.getPhred(71), 0.001);
		assertEquals(41.2054897430374, d.getPhred(72), 0.001);
		assertEquals(42.0878932287322, d.getPhred(73), 0.001);
		assertEquals(43.1408241467096, d.getPhred(74), 0.001);
		assertEquals(44.2587428269351, d.getPhred(75), 0.001);
		assertEquals(45.9321056888711, d.getPhred(76), 0.001);
		assertEquals(48.5349559686103, d.getPhred(77), 0.001);
	}
	@Test
	public void should_cap_at_boundry_phred_score() {
		SoftClipSizeDistribution d = new SoftClipSizeDistribution(data_778());
		assertEquals(0, d.getPhred(-2), 0.001);
		assertEquals(0, d.getPhred(-1), 0.001);
		assertEquals(0, d.getPhred(0), 0.001);
		assertEquals(48.5349559686103, d.getPhred(77), 0.001);
		assertEquals(48.5349559686103, d.getPhred(78), 0.001);
		assertEquals(48.5349559686103, d.getPhred(79), 0.001);
		assertEquals(48.5349559686103, d.getPhred(1000), 0.001);
	}
}
